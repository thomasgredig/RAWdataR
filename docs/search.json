[{"path":"https://thomasgredig.github.io/RAWdataR/articles/RAW-data-file-validation.html","id":"data-file-validation","dir":"Articles","previous_headings":"","what":"Data File Validation","title":"RAW data file validation","text":"order find data later stage foster enhanced search capabilities, show detect problems file labeling generate statistics.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/articles/RAW-data-file-validation.html","id":"validity","dir":"Articles","previous_headings":"Data File Validation","what":"Validity","title":"RAW data file validation","text":"","code":"path.RAW = raw.getSamplePath() file.list = dir(path.RAW) for(f in file.list) {   if (!raw.isValid(f)) {     print(paste(\"Found file with invalid name: \",f))   } } #> [1] \"Found file with invalid name:  getAFMdbName.R\" #> [1] \"Found file with invalid name:  makeData.R\" #> [1] \"Found file with invalid name:  not-a-RAW-file.txt\" #> [1] \"Found file with invalid name:  zzz.R\""},{"path":"https://thomasgredig.github.io/RAWdataR/articles/RAWdataR.html","id":"inspect-directory","dir":"Articles","previous_headings":"","what":"Inspect Directory","title":"Introduction RAWdataR","text":"can find projects users particular directory inspecting . One instruments , let us inspect file : data filename missing instrument. appears vsm data file. instrument can added follows:","code":"path.RAW = raw.getSamplePath() raw.inspectFolder(path.RAW) #> $hasSubfolders #> [1] FALSE #>  #> $projects #> [1] \"Dual,FePc,Optical\" #>  #> $users #> [1] \"AN,MM,TG\" #>  #> $samples #> [1] \"20160718,NM20151109CuPc100gl150-A2(UDS).txt,Tb33Al66\" #>  #> $instruments #> [1] \"mm160622si1,spectrophotometer,vsm\" #>  #> $validFiles #> [1] 3 #>  #> $invalidFiles #> [1] 4 basename(raw.findFiles(path.RAW, instrument='MM160622SI1')) #> [1] \"20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\" f = basename(raw.findFiles(path.RAW, instrument='MM160622SI1')) f.new = basename(raw.fixInvalidFile(f, addInstrument='vsm')) print(paste(\"Change:\",f,\"to:\",f.new)) #> [1] \"Change: 20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt to: 20160718_Dual_MM_vsm_MM160622SI1_20160718_2.5K_MVSH_00001.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/articles/RAWdataR.html","id":"find-duplicate-raw-data-files","dir":"Articles","previous_headings":"","what":"Find duplicate RAW data files","title":"Introduction RAWdataR","text":"list duplicated files. can find original file:","code":"path.RAW = raw.getSamplePath() f = raw.findDuplicates(path.RAW,isValid=FALSE) d1 = data.frame(f=basename(f),md5=raw.getMD5(f),row.names = c()) kable(d1, col.names = c('Duplicated Files','MD5')) searchMD5 = d1$md5[!duplicated(d1$md5)] for(m in searchMD5) {   print(paste(\"Duplicates for files with MD5 = \",m))   f = raw.findFiles(path.RAW, md5=m)   print(basename(f)) } #> [1] \"Duplicates for files with MD5 =  7545cd\" #> [1] \"20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt\"           #> [2] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/articles/introduction_checkRAWfolder.html","id":"inspect-directory","dir":"Articles","previous_headings":"","what":"Inspect Directory","title":"Introduction RAWdataR","text":"can find projects users particular directory inspecting . One instruments , let us inspect file : data filename missing instrument. appears vsm data file. instrument can added follows:","code":"path.RAW = raw.getSamplePath() raw.inspectFolder(path.RAW) #> $hasSubfolders #> [1] FALSE #>  #> $projects #> [1] \"Dual,FePc,Optical\" #>  #> $users #> [1] \"AN,MM,TG\" #>  #> $samples #> [1] \"20160718,NM20151109CuPc100gl150-A2(UDS).txt,Tb33Al66\" #>  #> $instruments #> [1] \"mm160622si1,spectrophotometer,vsm\" #>  #> $validFiles #> [1] 3 #>  #> $invalidFiles #> [1] 1 basename(raw.findFiles(path.RAW, instrument='MM160622SI1')) #> [1] \"20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\" f = basename(raw.findFiles(path.RAW, instrument='MM160622SI1')) f.new = basename(raw.fixInvalidFile(f, addInstrument='vsm')) print(paste(\"Change:\",f,\"to:\",f.new)) #> [1] \"Change: 20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt to: 20160718_Dual_MM_vsm_MM160622SI1_20160718_2.5K_MVSH_00001.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/articles/introduction_checkRAWfolder.html","id":"find-duplicate-raw-data-files","dir":"Articles","previous_headings":"","what":"Find duplicate RAW data files","title":"Introduction RAWdataR","text":"list duplicated files. can find original file:","code":"path.RAW = raw.getSamplePath() f = raw.findDuplicates(path.RAW,isValid=FALSE) d1 = data.frame(f=basename(f),md5=raw.getMD5(f),row.names = c()) kable(d1, col.names = c('Duplicated Files','MD5')) searchMD5 = d1$md5[!duplicated(d1$md5)] for(m in searchMD5) {   print(paste(\"Duplicates for files with MD5 = \",m))   f = raw.findFiles(path.RAW, md5=m)   print(basename(f)) } #> [1] \"Duplicates for files with MD5 =  7545cd\" #> [1] \"20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt\"           #> [2] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Gredig. Author, maintainer.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gredig T (2024). RAWdataR: Scientifically Reproducible RAW Data Processing. R package version 1.2.6, https://thomasgredig.github.io/RAWdataR/.","code":"@Manual{,   title = {RAWdataR: Scientifically Reproducible RAW Data Processing},   author = {Thomas Gredig},   year = {2024},   note = {R package version 1.2.6},   url = {https://thomasgredig.github.io/RAWdataR/}, }"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"rawdatar","dir":"","previous_headings":"","what":"Scientifically Reproducible RAW Data Processing","title":"Scientifically Reproducible RAW Data Processing","text":"RAWdataR provides framework R language uniquely track analyse raw data scientific instruments. assigns unique file IDs based MD5 sums. means even renaming files moving different folders, analysis package can refer ID retrieve data. Aligned National Science Foundation, Open Data NSF describes underlying goals; also fosters maintaining metadata. RAWdataR R package supports following workflow: Creation unique IDs files data project Basic validation organization scientific data","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Scientifically Reproducible RAW Data Processing","text":"can install released version RAWdataR :","code":"# install.packages(\"devtools\") devtools::install_github(\"thomasgredig/RAWdataR\")"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Scientifically Reproducible RAW Data Processing","text":"reference documentation examples list functions published package.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"raw-data-management-protocol","dir":"","previous_headings":"","what":"RAW Data Management Protocol","title":"Scientifically Reproducible RAW Data Processing","text":"Raw data considered direct output scientific instrument (XRD, AFM, etc.). follow principles data R package: data stored non-proprietory format, comma separated values (.csv) R Data (.rda) SQLite database (.sqlite); therefore, data can accessed beyond instrument’s lifetime. instrument uses proprietary data format, needs converted open-source data format. Raw data files project given unique RAW ID. ID refers particular file associated additional parameters, sample name, temperature, etc. - ID limited data package different packages may ID. Multiple collaborators can add data without corruption; .e. data can appended without need full access Raw data. Raw data may become part data package limit size. Large data files stored SQL format (sqlite) outside package. data package include sufficient description samples procedures understand instrument RAW data.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"data-and-project","dir":"","previous_headings":"RAW Data Management Protocol","what":"Data and Project","title":"Scientifically Reproducible RAW Data Processing","text":"analysis graphing data separate project package. data package distinct provides access data convenient format. possible, apply modeling analysis data, rather makes data available central package.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"naming-convention","dir":"","previous_headings":"RAW Data Management Protocol","what":"Naming Convention","title":"Scientifically Reproducible RAW Data Processing","text":"order achieve scientifically reproducible data, shall follow follow principles: Raw data altered assigned unique ID reliable data analysis. Raw data file names can changed corrected stored different subfolder without affecting unique IE, automatically reconciled using MD5 CRC string. data files must non-proprietary formats, , second file converted text ASCII format content needs saved well. possible, data file names include following formatting information: Date_Project_Initials_Tool_Sample_RunInfo.csv sub folders RAW folder useful can contain additional information; note path file name mutable unique ID must used. date yyyymmdd format represents date data collection start. project string assigned project manager initials person collecting data. Tools short strings represent machine taking data, see Tool List. sample unique name, generally starting initials person, following date sample creation. 1 data collection made one day, RunInfo added distinguish add description RAW data file.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Scientifically Reproducible RAW Data Processing","text":"basic example shows check RAW folder","code":"library(RAWdataR) raw.updateID(path.RAW)"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"loading-raw-data","dir":"","previous_headings":"Example","what":"Loading RAW Data","title":"Scientifically Reproducible RAW Data Processing","text":"graphing data analysis correct files need loaded. common approach searching data files project, date, user, instrument. data stored, file.list may change overtime. Therefore, approach ensure reproducibility requires generation MD5 string using raw.getPartialMD5str, exact file list established, can hard-coded string (see 4 files). Even files generated, file list restricted MD5 codes.","code":"# for instance, find all VSM files from 2018 file.list = raw.findFiles(path.RAW, date='2018', instrument='vsm') md5String = raw.getPartialMD5str(file.list) file.list = raw.findFiles(path.RAW, date='2018', instrument='vsm',     md5 = 'a25f3a,66c5d1,4a0333,1b94b5')"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"invalid-files","dir":"","previous_headings":"Example","what":"Invalid Files","title":"Scientifically Reproducible RAW Data Processing","text":"can also find files invalid naming convention using following function, date optional","code":"raw.getInvalidFiles(path.RAW, date='2020')"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"file-checking","dir":"","previous_headings":"Example","what":"File Checking","title":"Scientifically Reproducible RAW Data Processing","text":"Instead using direct filenames, can use checksums files. project data added time, following code:","code":"library(RAWdataR) s = raw.getPartialMD5(\"README.md\")  file.list = dir() # this will return 'README.md' filename = raw.getFilename(file.list,s)"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"data-project","dir":"","previous_headings":"","what":"Data Project","title":"Scientifically Reproducible RAW Data Processing","text":"new project RAW data, can quickly initialize using raw.dataProject() function. prompt select directory RAW subfolder generate R data package. generated, can open new data package run _init.R code, helps prepare documented data package. Afterwards, recommended add tests verify data content. can use raw.dataMaker() generate make.data..R file creates dataset.","code":"RAWdataR::raw.dataProject()"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"data-standards","dir":"","previous_headings":"","what":"Data Standards","title":"Scientifically Reproducible RAW Data Processing","text":"distinguish digital data experimental instruments (AFM, XRD, spectrometer, etc.) analog data (observations, sample names, etc.). raw instrument data stored standardized, open-accessible formats /CSV tables, possible. quality control procedure place. Data analysis organized, reproducible open access. Raw m’’;’lkjhgfd eta data saved R packages. primary analysis scientific data either R packages jupyter notebooks. Naming conventions followed.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/fig2tex.html","id":null,"dir":"Reference","previous_headings":"","what":"Save ggplot Figure to TeX Snippet — fig2tex","title":"Save ggplot Figure to TeX Snippet — fig2tex","text":"Creates two files (.tex .png); .png file contains figure (ggplot) submitted .tex file contains snipped load figure use (\\inputfile.tex TeX document) include figure caption.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/fig2tex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save ggplot Figure to TeX Snippet — fig2tex","text":"","code":"fig2tex(g, fileGraph, caption, ...)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/fig2tex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save ggplot Figure to TeX Snippet — fig2tex","text":"g figure class ggplot fileGraph file name save figure caption caption figure ... parameters passed ggsave() dpi,width","code":""},{"path":[]},{"path":"https://thomasgredig.github.io/RAWdataR/reference/fig2tex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Save ggplot Figure to TeX Snippet — fig2tex","text":"Thomas Gredig","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/fig2tex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save ggplot Figure to TeX Snippet — fig2tex","text":"","code":"q = tempdir() x=seq(-10,10,0.1); y=x^2-2 g = ggplot2::ggplot(data.frame(x,y), ggplot2::aes(x,y)) +   ggplot2::geom_point(col='red') + ggplot2::theme_bw() fig2tex(g, file.path(q,\"test.png\"), \"First Graph.\") #> Saving 6.67 x 6.67 in image #> [1] \"/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T//Rtmp0kPlGw/test.tex\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/makeRAWtestFolder.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes a RAW test folder — makeRAWtestFolder","title":"Makes a RAW test folder — makeRAWtestFolder","text":"Makes RAW test folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/makeRAWtestFolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes a RAW test folder — makeRAWtestFolder","text":"","code":"makeRAWtestFolder(noFiles = 1)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/makeRAWtestFolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes a RAW test folder — makeRAWtestFolder","text":"noFiles number random files generate","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/path.goUpOneDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Return path up one directory — path.goUpOneDir","title":"Return path up one directory — path.goUpOneDir","text":"Return path one directory","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/path.goUpOneDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return path up one directory — path.goUpOneDir","text":"","code":"path.goUpOneDir(p)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/path.goUpOneDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return path up one directory — path.goUpOneDir","text":"p path","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/path.goUpOneDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return path up one directory — path.goUpOneDir","text":"path last directory removed","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/path.goUpOneDir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return path up one directory — path.goUpOneDir","text":"","code":"path.goUpOneDir('/Users/test/fish-100') #> [1] \"/Users/test\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.RAWIDfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Full Path of RAW-ID File — raw.RAWIDfile","title":"Full Path of RAW-ID File — raw.RAWIDfile","text":"RAW-ID file CSV file unique IDs MD5 check sums data files. function guesses location returns .","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.RAWIDfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full Path of RAW-ID File — raw.RAWIDfile","text":"","code":"raw.RAWIDfile(pRESULTS = \"data-raw\", idFile = \"RAW-ID.csv\", ...)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.RAWIDfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full Path of RAW-ID File — raw.RAWIDfile","text":"pRESULTS path RAW ID file idFile name RAW-ID file, usually, RAW-ID.csv ... verbose logical","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.RAWIDfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full Path of RAW-ID File — raw.RAWIDfile","text":"","code":"##This may create a new directory raw.RAWIDfile() #> [1] \"data-raw/RAW-ID.csv\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.checkNoSubfolders.html","id":null,"dir":"Reference","previous_headings":"","what":"Subfolders in RAW path — raw.checkNoSubfolders","title":"Subfolders in RAW path — raw.checkNoSubfolders","text":"RAW path contain subfolders; reason subfolders tend additional information folder name, makes file less unique.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.checkNoSubfolders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subfolders in RAW path — raw.checkNoSubfolders","text":"","code":"raw.checkNoSubfolders(pfad)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.checkNoSubfolders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subfolders in RAW path — raw.checkNoSubfolders","text":"pfad path RAW folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.checkNoSubfolders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subfolders in RAW path — raw.checkNoSubfolders","text":"TRUE subfolders","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.checkNoSubfolders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subfolders in RAW path — raw.checkNoSubfolders","text":"","code":"raw.checkNoSubfolders(raw.getSamplePath()) #> [1] TRUE"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataATE.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dataATE Table — raw.dataATE","title":"Create dataATE Table — raw.dataATE","text":"Create dataATE Table","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataATE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dataATE Table — raw.dataATE","text":"","code":"raw.dataATE(fIDfile = \"data-raw/RAW-ID.csv\", dataATE = NULL, verbose = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataATE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create dataATE Table — raw.dataATE","text":"fIDfile RAW-ID file path dataATE table ATE data verbose logical extra information","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataFilesAFM.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dataFilesAFM Table — raw.dataFilesAFM","title":"Create dataFilesAFM Table — raw.dataFilesAFM","text":"Create dataFilesAFM Table","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataFilesAFM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dataFilesAFM Table — raw.dataFilesAFM","text":"","code":"raw.dataFilesAFM(   fIDfile = \"data-raw/RAW-ID.csv\",   dataFilesAFM = NULL,   f_post = NA,   verbose = FALSE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataFilesAFM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create dataFilesAFM Table — raw.dataFilesAFM","text":"fIDfile RAW-ID file path dataFilesAFM table AFM data f_post function customize sample, type etc. verbose logical extra information","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataMaker.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a maker file inside the data-raw folder — raw.dataMaker","title":"Creates a maker file inside the data-raw folder — raw.dataMaker","text":"Creates template files help create data sets; several data set makers supported; use arguments see interactive menu.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataMaker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a maker file inside the data-raw folder — raw.dataMaker","text":"","code":"raw.dataMaker()"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataMaker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a maker file inside the data-raw folder — raw.dataMaker","text":"","code":"if (FALSE) { raw.dataMaker() }"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataProject.html","id":null,"dir":"Reference","previous_headings":"","what":"makes a data R project — raw.dataProject","title":"makes a data R project — raw.dataProject","text":"Use interactive directory selector create data R project: selected folder sub directory called RAW RAW data files stored directory directory","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataProject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"makes a data R project — raw.dataProject","text":"","code":"raw.dataProject(sourceDir = NULL)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataProject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"makes a data R project — raw.dataProject","text":"sourceDir specified, R project generated directory, otherwise interactive window allows user select directory","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataProject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"makes a data R project — raw.dataProject","text":"","code":"if (FALSE) { RAWdataR::raw.dataProject() }"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataXRD.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dataXRD Table — raw.dataXRD","title":"Create dataXRD Table — raw.dataXRD","text":"Create dataXRD Table","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataXRD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dataXRD Table — raw.dataXRD","text":"","code":"raw.dataXRD(fIDfile = \"data-raw/RAW-ID.csv\", dataXRD = NULL, verbose = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataXRD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create dataXRD Table — raw.dataXRD","text":"fIDfile RAW-ID file path verbose logical extra information dataFilesAFM table AFM data","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findDuplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Find duplicate RAW files — raw.findDuplicates","title":"Find duplicate RAW files — raw.findDuplicates","text":"Date: 2018-11-21 Searches directory files (necessarily coded properly), returns vector files duplicate.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findDuplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find duplicate RAW files — raw.findDuplicates","text":"","code":"raw.findDuplicates(pfad, fromLast = TRUE, isValid = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findDuplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find duplicate RAW files — raw.findDuplicates","text":"pfad path search duplicate files fromLast TRUE, last element kept, FALSE, first element kept, default TRUE isValid TRUE search valid named files","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findDuplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find duplicate RAW files — raw.findDuplicates","text":"list files duplicates","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"returns a list of files provided the search criteria — raw.findFiles","title":"returns a list of files provided the search criteria — raw.findFiles","text":"returns list files provided search criteria","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns a list of files provided the search criteria — raw.findFiles","text":"","code":"raw.findFiles(   pfad,   project = \"[^_]+\",   date = \"[^_]+\",   user = \"[^_]+\",   instrument = \"[^_]+\",   sample = \"[^_]+\",   md5 = \"\",   fullPath = TRUE,   recursive = FALSE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns a list of files provided the search criteria — raw.findFiles","text":"pfad path RAW files project name project date date format YYYYMMDD user 2 initials user instrument name instrument, 'vsm' sample sample name md5 single string comma separated abbreviated MD5 sums fullPath TRUE, returns full path, otherwise filename recursive TRUE, also searchs subfolders","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns a list of files provided the search criteria — raw.findFiles","text":"list filenames certain checksum","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns a list of files provided the search criteria — raw.findFiles","text":"","code":"pfad = raw.getSamplePath() file.list = raw.findFiles(pfad, date='201606')  # all files from June 2019 print(basename(file.list)) #> [1] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\" md5String = raw.getMD5str(file.list) file.list = raw.findFiles(pfad, md5 = md5String) print(basename(file.list)) #> [1] \"20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt\"           #> [2] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.fixInvalidFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix invalid data filename — raw.fixInvalidFile","title":"Fix invalid data filename — raw.fixInvalidFile","text":"Fix invalid data filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.fixInvalidFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix invalid data filename — raw.fixInvalidFile","text":"","code":"raw.fixInvalidFile(   filename,   addInstrument = \"\",   addUser = \"\",   addProject = \"\",   addSample = \"\",   renameFile = FALSE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.fixInvalidFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix invalid data filename — raw.fixInvalidFile","text":"filename name file addInstrument instrument added addUser user added addProject project added addSample sample added renameFile TRUE file renamed","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.fixInvalidFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix invalid data filename — raw.fixInvalidFile","text":"returns fixed filenames","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.fixInvalidFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix invalid data filename — raw.fixInvalidFile","text":"","code":"f = raw.findFiles(raw.getSamplePath(), instrument='MM160622SI1') print(f) #> [1] \"/private/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T/RtmpfTPid7/temp_libpath302c870eeeb/RAWdataR/extdata/20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\" f.new = raw.fixInvalidFile(f, addInstrument='vsm') print(paste(\"Old name:\",f)) #> [1] \"Old name: /private/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T/RtmpfTPid7/temp_libpath302c870eeeb/RAWdataR/extdata/20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\" print(paste(\"New name:\",f.new)) #> [1] \"New name: /private/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T/RtmpfTPid7/temp_libpath302c870eeeb/RAWdataR/extdata/20160718_Dual_MM_vsm_MM160622SI1_20160718_2.5K_MVSH_00001.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.generateDataMaker.html","id":null,"dir":"Reference","previous_headings":"","what":"creates a maker file inside the data-raw folder — raw.generateDataMaker","title":"creates a maker file inside the data-raw folder — raw.generateDataMaker","text":"creates maker file inside data-raw folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.generateDataMaker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates a maker file inside the data-raw folder — raw.generateDataMaker","text":"","code":"raw.generateDataMaker(fileMaker = \"make.dataRAW.R\")"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage SQL Database with Data Package — raw.getDatabase","title":"Manage SQL Database with Data Package — raw.getDatabase","text":"data packages require large amounts data (1 - 10GB), stored `extdata` folder directly, since install take long. data exceeds 10 MB, RDA files become inefficient, SQL database makes sense. AFM data, can use AFM.writeDB() example. database needs stored `extdata` also needs version controlled. function helps manage process. data package generates small RDA data files puts large data files SQL databse stored main directory database. database needs store least one dummy file `inst/extdata` folder, folder generated loaded. called `pkgname`, function uses version generate database filename return path.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage SQL Database with Data Package — raw.getDatabase","text":"","code":"raw.getDatabase(pkgname, dbPath = NULL, verbose = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage SQL Database with Data Package — raw.getDatabase","text":"pkgname name R data package dbPath path verbose logical, additional information","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage SQL Database with Data Package — raw.getDatabase","text":"SQL database filename path","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFileByID.html","id":null,"dir":"Reference","previous_headings":"","what":"Return filename by ID — raw.getFileByID","title":"Return filename by ID — raw.getFileByID","text":"Return filename ID","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFileByID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return filename by ID — raw.getFileByID","text":"","code":"raw.getFileByID(ID, pRESULTS = \"data-raw\", idFile = \"RAW-ID.csv\")"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFileByID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return filename by ID — raw.getFileByID","text":"ID list RAW file IDs pRESULTS results folder idFile name file RAW IDs","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFileByID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return filename by ID — raw.getFileByID","text":"data frame filename, path, information file","code":""},{"path":[]},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilename.html","id":null,"dir":"Reference","previous_headings":"","what":"OBSOLETE: return filename from MD5 — raw.getFilename","title":"OBSOLETE: return filename from MD5 — raw.getFilename","text":"OBSOLETE: return filename MD5","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OBSOLETE: return filename from MD5 — raw.getFilename","text":"","code":"raw.getFilename(file.list, MD5)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OBSOLETE: return filename from MD5 — raw.getFilename","text":"file.list path filenames MD5 checksum, can length","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilenameByMD5.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the filename with certain MD5sum — raw.getFilenameByMD5","title":"returns the filename with certain MD5sum — raw.getFilenameByMD5","text":"returns filename certain MD5sum","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilenameByMD5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the filename with certain MD5sum — raw.getFilenameByMD5","text":"","code":"raw.getFilenameByMD5(file.list, MD5)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilenameByMD5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the filename with certain MD5sum — raw.getFilenameByMD5","text":"file.list path filenames MD5 checksum, can length","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilenameByMD5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the filename with certain MD5sum — raw.getFilenameByMD5","text":"filename certain MD5 checksum, returns NA found","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilenameByMD5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the filename with certain MD5sum — raw.getFilenameByMD5","text":"","code":"file.list = file.path(raw.getSampleFiles()) raw.getFilenameByMD5(file.list,'24fefa') #> [1] \"/private/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T/RtmpfTPid7/temp_libpath302c870eeeb/RAWdataR/extdata/20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getIDbyFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Return filename by ID — raw.getIDbyFile","title":"Return filename by ID — raw.getIDbyFile","text":"Return filename ID","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getIDbyFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return filename by ID — raw.getIDbyFile","text":"","code":"raw.getIDbyFile(   file.list,   pRESULTS = \"data-raw\",   idFile = \"RAW-ID.csv\",   exactNameMatch = TRUE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getIDbyFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return filename by ID — raw.getIDbyFile","text":"file.list list file names pRESULTS results folder, missing path.RESULTS defined use folder idFile name file RAW IDs exactNameMatch logical, FALSE match partial file names","code":""},{"path":[]},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getInvalidFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns all invalid RAW files — raw.getInvalidFiles","title":"Returns all invalid RAW files — raw.getInvalidFiles","text":"Searches folder (year) files invalid","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getInvalidFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns all invalid RAW files — raw.getInvalidFiles","text":"","code":"raw.getInvalidFiles(pfad, year = \".*\", recursive = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getInvalidFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns all invalid RAW files — raw.getInvalidFiles","text":"pfad path RAW folder year limit particular year (currently ignored) recursive TRUE, also search sub-directories","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getInvalidFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns all invalid RAW files — raw.getInvalidFiles","text":"vector filenames","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getInvalidFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns all invalid RAW files — raw.getInvalidFiles","text":"","code":"raw.getInvalidFiles(raw.getSamplePath()) #> [1] \"getAFMdbName.R\"     \"makeData.R\"         \"not-a-RAW-file.txt\" #> [4] \"zzz.R\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the MD5sum of a filename — raw.getMD5","title":"returns the MD5sum of a filename — raw.getMD5","text":"returns MD5sum filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the MD5sum of a filename — raw.getMD5","text":"","code":"raw.getMD5(filename, num = 6)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the MD5sum of a filename — raw.getMD5","text":"filename filename num string length","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the MD5sum of a filename — raw.getMD5","text":"CRC MD5 sum particular file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the MD5sum of a filename — raw.getMD5","text":"","code":"raw.getMD5(raw.getSampleFiles(),num=10) #>           /private/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T/RtmpfTPid7/temp_libpath302c870eeeb/RAWdataR/extdata/20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt  #>                                                                                                                                                                          \"7545cdf506\"  #> /private/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T/RtmpfTPid7/temp_libpath302c870eeeb/RAWdataR/extdata/20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt  #>                                                                                                                                                                          \"7545cdf506\"  #>                /private/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T/RtmpfTPid7/temp_libpath302c870eeeb/RAWdataR/extdata/20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt  #>                                                                                                                                                                          \"24fefae835\"  #>                                                       /private/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T/RtmpfTPid7/temp_libpath302c870eeeb/RAWdataR/extdata/not-a-RAW-file.txt  #>                                                                                                                                                                          \"7545cdf506\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5str.html","id":null,"dir":"Reference","previous_headings":"","what":"returns a string with all MD5 files — raw.getMD5str","title":"returns a string with all MD5 files — raw.getMD5str","text":"returns string MD5 files","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns a string with all MD5 files — raw.getMD5str","text":"","code":"raw.getMD5str(filename)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns a string with all MD5 files — raw.getMD5str","text":"filename filename path","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns a string with all MD5 files — raw.getMD5str","text":"CRC MD5 sum particular file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns a string with all MD5 files — raw.getMD5str","text":"","code":"raw.getMD5str(raw.getSampleFiles()) #> [1] \"7545cd,7545cd,24fefa,7545cd\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate projects, dates, and users — raw.getNames","title":"Separate projects, dates, and users — raw.getNames","text":"Separate projects, dates, users","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate projects, dates, and users — raw.getNames","text":"","code":"raw.getNames(file.list)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate projects, dates, and users — raw.getNames","text":"file.list file names","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate projects, dates, and users — raw.getNames","text":"list","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Separate projects, dates, and users — raw.getNames","text":"","code":"raw.getNames(raw.getSampleFiles()) #> Warning: There are 1 invalid files that were removed from analysis. #>       date project user        instrument                             sample #> 1 20141215    FePc   TG               vsm                           Tb33Al66 #> 2 20160607 Optical   AN Spectrophotometer NM20151109CuPc100gl150-A2(UDS).txt #> 3 20160718    Dual   MM       MM160622SI1                           20160718 #>                                                                    comment #> 1           20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt #> 2 20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt #> 3                                                               MVSH_00001 #>                                                                  extension size #> 1           20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt   NA #> 2 20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt   NA #> 3                                                                      txt   NA"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoImages.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the number of images — raw.getNoImages","title":"returns the number of images — raw.getNoImages","text":"returns number images","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoImages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the number of images — raw.getNoImages","text":"","code":"raw.getNoImages(pfad)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoImages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the number of images — raw.getNoImages","text":"pfad path RAW folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoImages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the number of images — raw.getNoImages","text":"number images","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoImages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the number of images — raw.getNoImages","text":"","code":"raw.getNoImages(raw.getSamplePath()) #> [1] 0"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"returns approximate number of samples that were made — raw.getNoSamples","title":"returns approximate number of samples that were made — raw.getNoSamples","text":"returns approximate number samples made","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns approximate number of samples that were made — raw.getNoSamples","text":"","code":"raw.getNoSamples(pfad, recursive = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns approximate number of samples that were made — raw.getNoSamples","text":"pfad path RAW folder recursive TRUE search also subfolders","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns approximate number of samples that were made — raw.getNoSamples","text":"number samples made NTE","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns approximate number of samples that were made — raw.getNoSamples","text":"","code":"raw.getNoSamples(raw.getSamplePath()) #> [1] 3"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the MD5sum of a filename — raw.getPartialMD5","title":"returns the MD5sum of a filename — raw.getPartialMD5","text":"returns MD5sum filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the MD5sum of a filename — raw.getPartialMD5","text":"","code":"raw.getPartialMD5(filename, num = 6)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the MD5sum of a filename — raw.getPartialMD5","text":"filename filename num string length","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the MD5sum of a filename — raw.getPartialMD5","text":"CRC MD5 sum particular file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5str.html","id":null,"dir":"Reference","previous_headings":"","what":"returns a string with all MD5 files — raw.getPartialMD5str","title":"returns a string with all MD5 files — raw.getPartialMD5str","text":"returns string MD5 files","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns a string with all MD5 files — raw.getPartialMD5str","text":"","code":"raw.getPartialMD5str(filename)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns a string with all MD5 files — raw.getPartialMD5str","text":"filename filename path","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns a string with all MD5 files — raw.getPartialMD5str","text":"CRC MD5 sum particular file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSampleFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Files from RAW folder — raw.getSampleFiles","title":"Sample Files from RAW folder — raw.getSampleFiles","text":"Returns list filenames sample RAW folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSampleFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Files from RAW folder — raw.getSampleFiles","text":"","code":"raw.getSampleFiles()"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSampleFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Files from RAW folder — raw.getSampleFiles","text":"list filenames including path","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSampleFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Files from RAW folder — raw.getSampleFiles","text":"","code":"basename(raw.getSampleFiles()) #> [1] \"20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt\"           #> [2] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\" #> [3] \"20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\"                #> [4] \"not-a-RAW-file.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSamplePath.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample path to RAW folder — raw.getSamplePath","title":"Sample path to RAW folder — raw.getSamplePath","text":"Returns path several sample files check validity filenames.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSamplePath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample path to RAW folder — raw.getSamplePath","text":"","code":"raw.getSamplePath()"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSamplePath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample path to RAW folder — raw.getSamplePath","text":"path sample RAW files","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSamplePath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample path to RAW folder — raw.getSamplePath","text":"","code":"if (FALSE) {   raw.getSamplePath() }"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getValidFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns all valid RAW files — raw.getValidFiles","title":"Returns all valid RAW files — raw.getValidFiles","text":"Searches folder valid files","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getValidFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns all valid RAW files — raw.getValidFiles","text":"","code":"raw.getValidFiles(pfad, recursive = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getValidFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns all valid RAW files — raw.getValidFiles","text":"pfad path RAW folder recursive TRUE, also search sub-directories","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getValidFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns all valid RAW files — raw.getValidFiles","text":"vector filenames","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getValidFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns all valid RAW files — raw.getValidFiles","text":"","code":"raw.getValidFiles(raw.getSamplePath()) #> [1] \"20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt\"           #> [2] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\" #> [3] \"20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.inspectFolder.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect RAW data folder — raw.inspectFolder","title":"Inspect RAW data folder — raw.inspectFolder","text":"Inspect RAW data folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.inspectFolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect RAW data folder — raw.inspectFolder","text":"","code":"raw.inspectFolder(pfad, recursive = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.inspectFolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect RAW data folder — raw.inspectFolder","text":"pfad path folder RAW data recursive TRUE also search subfolders","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.inspectFolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect RAW data folder — raw.inspectFolder","text":"list","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.inspectFolder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect RAW data folder — raw.inspectFolder","text":"","code":"raw.inspectFolder(raw.getSamplePath()) #> $hasSubfolders #> [1] FALSE #>  #> $projects #> [1] \"Dual,FePc,Optical\" #>  #> $users #> [1] \"AN,MM,TG\" #>  #> $samples #> [1] \"20160718,NM20151109CuPc100gl150-A2(UDS).txt,Tb33Al66\" #>  #> $instruments #> [1] \"mm160622si1,spectrophotometer,vsm\" #>  #> $validFiles #> [1] 3 #>  #> $invalidFiles #> [1] 4 #>"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.installSQLremote.html","id":null,"dir":"Reference","previous_headings":"","what":"Install SQL AFM Database from Remote Site — raw.installSQLremote","title":"Install SQL AFM Database from Remote Site — raw.installSQLremote","text":"Installs large SQL AFM database remote site; order data R packages load quickly take large space external repositories, function implements solution stores database remotely. needed, installed locally `extdata/` folder. function returns name database. new data added SQL databse, new version generally generated; can done upgrading existing old version.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.installSQLremote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install SQL AFM Database from Remote Site — raw.installSQLremote","text":"","code":"raw.installSQLremote(pkgname, urlRepo, upgradeFrom = \"\")"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.installSQLremote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install SQL AFM Database from Remote Site — raw.installSQLremote","text":"pkgname file name SQL db package upgradeFrom old version, string \"0.2.1\", black upgrade urlREPO URL PATH directory repository SQL database","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.installSQLremote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install SQL AFM Database from Remote Site — raw.installSQLremote","text":"SQL database filename path","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.isValid.html","id":null,"dir":"Reference","previous_headings":"","what":"check whether a RAW data file has a valid filename — raw.isValid","title":"check whether a RAW data file has a valid filename — raw.isValid","text":"check whether RAW data file valid filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.isValid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check whether a RAW data file has a valid filename — raw.isValid","text":"","code":"raw.isValid(filename)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.isValid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check whether a RAW data file has a valid filename — raw.isValid","text":"filename name file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.isValid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check whether a RAW data file has a valid filename — raw.isValid","text":"returns TRUE name valid format","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.isValid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check whether a RAW data file has a valid filename — raw.isValid","text":"","code":"raw.isValid(raw.getSampleFiles()) #> [1]  TRUE  TRUE  TRUE FALSE"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.readRAWIDfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads an RAW ID file — raw.readRAWIDfile","title":"Reads an RAW ID file — raw.readRAWIDfile","text":"Ignores header / comment lines #","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.readRAWIDfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads an RAW ID file — raw.readRAWIDfile","text":"","code":"raw.readRAWIDfile(fIDfile = \"data-raw/RAW-ID.csv\")"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.readRAWIDfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads an RAW ID file — raw.readRAWIDfile","text":"fIDfile file name, usually RAW_ID.csv","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.readRAWIDheader.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads an RAW ID header — raw.readRAWIDheader","title":"Reads an RAW ID header — raw.readRAWIDheader","text":"Header information presided # separated name:value colon example # Version: 1.0","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.readRAWIDheader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads an RAW ID header — raw.readRAWIDheader","text":"","code":"raw.readRAWIDheader(fIDfile = \"data-raw/RAW-ID.csv\")"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.readRAWIDheader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads an RAW ID header — raw.readRAWIDheader","text":"fIDfile path file name RAW-ID.csv file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.readRAWIDheader.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads an RAW ID header — raw.readRAWIDheader","text":"","code":"pRAW = makeRAWtestFolder() #> RAW ID File: /var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T//Rtmp0kPlGw/RAW-ID.csv  #> RAW folder:  /var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T//Rtmp0kPlGw/RAW  #> Will create a brand-new data file. #> There are 0 missing files. #> There are 0 altered files. #> --> Updating / adding new files from /var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T//Rtmp0kPlGw/RAW . #> Found 1 files in RAW folder. #> Writing RAW ID file:  /var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T//Rtmp0kPlGw/RAW-ID.csv  raw.readRAWIDheader(file.path(pRAW, \"RAW-ID.csv\")) #> $pgm #> [1] \"RAWdataR\" #>  #> $path #> [1] \"/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T//Rtmp0kPlGw/RAW\" #>  #> $paths #> [1] \"/var/folders/bz/zk25f6614w5b3_f61czs2dtc0000gr/T//Rtmp0kPlGw/RAW\" #>  #> $version #> [1] \"1.2.6\" #>  #> $stamp #> [1] \"2024-03-29 19:53:55.277495\" #>  #> $IDmax #> [1] \"8\" #>"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.splitFilename.html","id":null,"dir":"Reference","previous_headings":"","what":"splits filename into fields — raw.splitFilename","title":"splits filename into fields — raw.splitFilename","text":"splits filename fields","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.splitFilename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"splits filename into fields — raw.splitFilename","text":"","code":"raw.splitFilename(filelist)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.splitFilename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"splits filename into fields — raw.splitFilename","text":"filelist filename RAW folder format","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.splitFilename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"splits filename into fields — raw.splitFilename","text":"data frame","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.splitFilename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"splits filename into fields — raw.splitFilename","text":"","code":"raw.splitFilename('20010101_project_user_inst_sample_desc.DAT') #>       Date Project User Instrument Sample Description Extension #> 1 20010101 project user       inst sample    desc.DAT       DAT"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.texArticle.html","id":null,"dir":"Reference","previous_headings":"","what":"LaTeX Article with all Fig2TeX figures — raw.texArticle","title":"LaTeX Article with all Fig2TeX figures — raw.texArticle","text":"saving TeX snippets folder (figPath) fig2tex, , use function generate main TeX file called fileTeX includes snippets compiling shows document graphs / images. main TeX file saved folder figPath. overwrite file.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.texArticle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LaTeX Article with all Fig2TeX figures — raw.texArticle","text":"","code":"raw.texArticle(figPath, fileTeX = \"_main.tex\")"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.texArticle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LaTeX Article with all Fig2TeX figures — raw.texArticle","text":"figPath path figures, contain tex figure files generated fig2tex fileTeX name article generated figPath","code":""},{"path":[]},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.tryFixInvalidFile.html","id":null,"dir":"Reference","previous_headings":"","what":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","title":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","text":"suggests new filename invalid filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.tryFixInvalidFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","text":"","code":"raw.tryFixInvalidFile(   pfad,   filename,   project = \"xx\",   user = \"unknown\",   guessSample = FALSE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.tryFixInvalidFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","text":"pfad path RAW folder filename filename RAW folder project project name known user 2 3 letter user initials guessSample TRUE/FALSE add sample name","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.tryFixInvalidFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","text":"string suggested filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.tryFixInvalidFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","text":"","code":"fname = raw.getInvalidFiles(raw.getSamplePath())[1] raw.tryFixInvalidFile(pfad = raw.getSamplePath(),filename = fname) #> Warning: argument 'pattern' has length > 1 and only the first element will be used #> [1] \"20240330_xx_unknown_XRD_getAFMdbName.R\" #> [2] \"20240330_xx_unknown_XRD_getAFMdbName.R\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigns a Unique ID to each RAW Data File — raw.updateID","title":"Assigns a Unique ID to each RAW Data File — raw.updateID","text":"Finds RAW files assigns unique ID. ID assigned, immutable; file identified CRC check sum, code file size, file name; file name location changed, ID remain , file name updated. meta data paths RAW data stored header information, currently located end file.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assigns a Unique ID to each RAW Data File — raw.updateID","text":"","code":"raw.updateID(   pRAW = \"\",   pRESULTS = \"data-raw\",   idFile = \"RAW-ID.csv\",   f_post = NA,   forceRegenerate = FALSE,   fixDuplicates = FALSE,   removeIDs = c(),   noData = FALSE,   verbose = TRUE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assigns a Unique ID to each RAW Data File — raw.updateID","text":"pRAW path raw data, missing, prompt path pRESULTS path results, default: uses pRAW idFile name file IDs, default: RAW-ID.csv f_post function customize sample, type etc. forceRegenerate logical, regenerate file, use great care fixDuplicates logical, TRUE, duplicates removed, use care removeIDs CAUTION: delete IDs listed vector noData logical, TRUE, returns RAW ID file name otherwise RAW data verbose logical, TRUE outputs information process","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assigns a Unique ID to each RAW Data File — raw.updateID","text":"returns TRUE name valid format","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":"possible-scenarios","dir":"Reference","previous_headings":"","what":"Possible scenarios","title":"Assigns a Unique ID to each RAW Data File — raw.updateID","text":"(rule 1) RAW ID file exist must generated (rule 2) new RAW file added, (rule 3) RAW file missing, (rule 4) RAW file duplicate different folder, (rule 5) RAW file duplicate new name, (rule 6) RAW file moved different folder, folder needs update","code":""},{"path":[]},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assigns a Unique ID to each RAW Data File — raw.updateID","text":"","code":"if (FALSE) {   raw.updateID() }"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.writeRAWIDfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes an RAW ID file with Header — raw.writeRAWIDfile","title":"Writes an RAW ID file with Header — raw.writeRAWIDfile","text":"Writes RAW ID file Header","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.writeRAWIDfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes an RAW ID file with Header — raw.writeRAWIDfile","text":"","code":"raw.writeRAWIDfile(rID, header_list, fIDfile)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.writeRAWIDfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes an RAW ID file with Header — raw.writeRAWIDfile","text":"rID RAW ID data frame header_list list saved fIDfile filename RAW_ID.csv saved","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.writeRAWIDheader.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes a RAW ID Header — raw.writeRAWIDheader","title":"Writes a RAW ID Header — raw.writeRAWIDheader","text":"Writes RAW ID Header","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.writeRAWIDheader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes a RAW ID Header — raw.writeRAWIDheader","text":"","code":"raw.writeRAWIDheader(header_list, fIDfile)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.writeRAWIDheader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes a RAW ID Header — raw.writeRAWIDheader","text":"header_list list saved fIDfile filen ame RAW_ID.csv saved","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-126","dir":"Changelog","previous_headings":"","what":"RAWdataR 1.2.6","title":"RAWdataR 1.2.6","text":"update documentation","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-125","dir":"Changelog","previous_headings":"","what":"RAWdataR 1.2.5","title":"RAWdataR 1.2.5","text":"allow post-function add extra columns raw-id.csv data frame raw.updateID","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-124","dir":"Changelog","previous_headings":"","what":"RAWdataR 1.2.4","title":"RAWdataR 1.2.4","text":"support Windows paths RAW-ID.csv support colon “C:\" convert forward backslashes Update tests","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-123","dir":"Changelog","previous_headings":"","what":"RAWdataR 1.2.3","title":"RAWdataR 1.2.3","text":"move header front RAW-ID.csv file update raw.dataMaker() generate makeData()","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-122","dir":"Changelog","previous_headings":"","what":"RAWdataR 1.2.2","title":"RAWdataR 1.2.2","text":"add raw.dataXRD() XRD","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-121","dir":"Changelog","previous_headings":"","what":"RAWdataR 1.2.1","title":"RAWdataR 1.2.1","text":"add raw.dataFilesAFM() AFM file support raw.getDatabase() now append folder package fix bugs","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-120","dir":"Changelog","previous_headings":"","what":"RAWdataR 1.2.0","title":"RAWdataR 1.2.0","text":"add post function raw.updateID(), type sample names adjusted according specific rules.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-110","dir":"Changelog","previous_headings":"","what":"RAWdataR 1.1.0","title":"RAWdataR 1.1.0","text":"create new column dataRAW META data add file generation date store data header fix NA empty strings writing reading CSV","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-101","dir":"Changelog","previous_headings":"","what":"RAWdataR 1.0.1","title":"RAWdataR 1.0.1","text":"updated documentation","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-064","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.6.4","title":"RAWdataR 0.6.4","text":"add SQL installation function raw.installSQLremote() allow generation TeX article shows figures","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-063","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.6.3","title":"RAWdataR 0.6.3","text":"update AFM data maker (SQL integration)","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-062","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.6.2","title":"RAWdataR 0.6.2","text":"add XRR file type","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-061","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.6.1","title":"RAWdataR 0.6.1","text":"RAW folder can folder selected folder raw.dataProject() function fig2tex() save graphs TeX snippet import","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-06","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.6","title":"RAWdataR 0.6","text":"adding raw.dataProject() generate data R project start framework quickly use raw.dataMaker() generate dataset maker files RAWID etc.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-052","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.5.2","title":"RAWdataR 0.5.2","text":"raw.updateID() uses data-raw default raw folder also results","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-052-1","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.5.2","title":"RAWdataR 0.5.2","text":"allow search partial filename matching raw.getIDfromFile() add raw.updateID() build unique IDs files based MD5 add function path.goUpOneDir() easily go one directory","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-051","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.5.1","title":"RAWdataR 0.5.1","text":"allow recursive search (subfolders) raw data folder Number valid files returned raw.inspectFolder() Instruments “xrd” “XRD” converted lowercase raw.fixInvalidFile() can add instrument, user, project, sample Fix findFiles, specific item searched.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-05","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.5","title":"RAWdataR 0.5","text":"Add raw.fixInvalidFile() fix filenames Write path inspector Fix raw.findFiles() MD5 code Validation files raw.isValid() (Documentation References)[https://thomasgredig.github.io/RAWdataR/] tools library used MD5 checks use_news_md() Added NEWS.md file track changes package.","code":""}]
