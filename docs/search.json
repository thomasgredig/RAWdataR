[{"path":"https://thomasgredig.github.io/RAWdataR/articles/RAW-data-file-validation.html","id":"data-file-validation","dir":"Articles","previous_headings":"","what":"Data File Validation","title":"RAW data file validation","text":"order find data later stage foster enhanced search capabilities, show detect problems file labeling generate statistics.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/articles/RAW-data-file-validation.html","id":"validity","dir":"Articles","previous_headings":"Data File Validation","what":"Validity","title":"RAW data file validation","text":"","code":"path.RAW = raw.getSamplePath() file.list = dir(path.RAW) for(f in file.list) {   if (!raw.isValid(f)) {     print(paste(\"Found file with invalid name: \",f))   } } #> [1] \"Found file with invalid name:  not-a-RAW-file.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/articles/introduction_checkRAWfolder.html","id":"inspect-directory","dir":"Articles","previous_headings":"","what":"Inspect Directory","title":"Introduction RAWdataR","text":"can find projects users particular directory inspecting . One instruments , let us inspect file : data filename missing instrument. appears vsm data file. instrument can added follows:","code":"path.RAW = raw.getSamplePath() raw.inspectFolder(path.RAW) #> $hasSubfolders #> [1] FALSE #>  #> $projects #> [1] \"Dual,FePc,Optical\" #>  #> $users #> [1] \"AN,MM,TG\" #>  #> $samples #> [1] \"20160718,NM20151109CuPc100gl150-A2(UDS).txt,Tb33Al66\" #>  #> $instruments #> [1] \"mm160622si1,spectrophotometer,vsm\" #>  #> $validFiles #> [1] 3 #>  #> $invalidFiles #> [1] 1 basename(raw.findFiles(path.RAW, instrument='MM160622SI1')) #> [1] \"20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\" f = basename(raw.findFiles(path.RAW, instrument='MM160622SI1')) f.new = basename(raw.fixInvalidFile(f, addInstrument='vsm')) print(paste(\"Change:\",f,\"to:\",f.new)) #> [1] \"Change: 20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt to: 20160718_Dual_MM_vsm_MM160622SI1_20160718_2.5K_MVSH_00001.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/articles/introduction_checkRAWfolder.html","id":"find-duplicate-raw-data-files","dir":"Articles","previous_headings":"","what":"Find duplicate RAW data files","title":"Introduction RAWdataR","text":"list duplicated files. can find original file:","code":"path.RAW = raw.getSamplePath() f = raw.findDuplicates(path.RAW,isValid=FALSE) d1 = data.frame(f=basename(f),md5=raw.getMD5(f),row.names = c()) kable(d1, col.names = c('Duplicated Files','MD5')) searchMD5 = d1$md5[!duplicated(d1$md5)] for(m in searchMD5) {   print(paste(\"Duplicates for files with MD5 = \",m))   f = raw.findFiles(path.RAW, md5=m)   print(basename(f)) } #> [1] \"Duplicates for files with MD5 =  7545cd\" #> [1] \"20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt\"           #> [2] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Gredig. Author, maintainer.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gredig T (2022). RAWdataR: Supports scientifically reproducible RAW data processing. R package version 0.6.1, https://thomasgredig.github.io/RAWdataR/.","code":"@Manual{,   title = {RAWdataR: Supports scientifically reproducible RAW data processing},   author = {Thomas Gredig},   year = {2022},   note = {R package version 0.6.1},   url = {https://thomasgredig.github.io/RAWdataR/}, }"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"rawdatar","dir":"","previous_headings":"","what":"Supports scientifically reproducible RAW data processing","title":"Supports scientifically reproducible RAW data processing","text":"goal RAWdataR validate scientific RAW folder perform standard file checks R language. National Science Foundation, Open Data NSF describes underlying goals fosters maintaing metadata.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Supports scientifically reproducible RAW data processing","text":"can install released version RAWdataR :","code":"# install.packages(\"devtools\") devtools::install_github(\"thomasgredig/RAWdataR\")"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Supports scientifically reproducible RAW data processing","text":"reference documentation examples list functions published package.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"naming-convention","dir":"","previous_headings":"","what":"Naming Convention","title":"Supports scientifically reproducible RAW data processing","text":"order achieve scientifically reproducible data, shall follow follow principles: RAW data filenames must unique content altered, filenames changed since graphing routines may rely unique data filenames, data files must non-proprietary formats, , second file converted text ASCII format content needs saved well. data files following format: Date_Project_Initials_Tool_Sample_RunInfo.csv files folder (sub-folders). RAW folder flat structrure. date yyyymmdd format represents date data collection start. project string assigned project manager initials person collecting data. Tools short strings represent machine taking data, see Tool List. sample unique name, generally starting witht initials person, following date sample creation. 1 data collection made one day, RunInfo added discriminate add description RAW data file.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Supports scientifically reproducible RAW data processing","text":"basic example shows check RAW folder","code":"library(RAWdataR)  # folder path p = 'Research-User/RAW'  # does it have the proper structure? raw.checkNoSubfolders(p)  # find all the project names raw.getNamesProjects(p)  # make a data frame with all fields d = raw.getTable(p)"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"loading-raw-data","dir":"","previous_headings":"","what":"Loading RAW Data","title":"Supports scientifically reproducible RAW data processing","text":"graphing data analysis correct files need loaded. common approach searching data files project, date, user, instrument. data stored, file.list may change overtime. Therefore, approach ensure reproducibility requires generation MD5 string using raw.getPartialMD5str, exact file list established, can hard-coded string (see 4 files). Even files generated, file list restricted MD5 codes.","code":"# for instance, find all VSM files from 2018 file.list = raw.findFiles(path.RAW, date='2018', instrument='vsm') md5String = raw.getPartialMD5str(file.list) file.list = raw.findFiles(path.RAW, date='2018', instrument='vsm',     md5 = 'a25f3a,66c5d1,4a0333,1b94b5')"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"invalid-files","dir":"","previous_headings":"","what":"Invalid Files","title":"Supports scientifically reproducible RAW data processing","text":"can also find files invalid naming convention using following function, date optional","code":"raw.getInvalidFiles(path.RAW, date='2020')"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"file-checking","dir":"","previous_headings":"","what":"File Checking","title":"Supports scientifically reproducible RAW data processing","text":"Instead using direct filenames, can use checksums files. project data added time, following code:","code":"library(RAWdataR) s = raw.getPartialMD5(\"README.md\")  file.list = dir() # this will return 'README.md' filename = raw.getFilename(file.list,s)"},{"path":"https://thomasgredig.github.io/RAWdataR/index.html","id":"data-project","dir":"","previous_headings":"","what":"Data Project","title":"Supports scientifically reproducible RAW data processing","text":"new project RAW data, can quickly initialize using raw.dataProject() function. prompt select directory RAW subfolder generate R data package. generated, can open new data package run _init.R code, helps prepare documented data package. Afterwards, recommended add tests verify data content. can use raw.dataMaker() generate make.data..R file creates dataset.","code":"RAWdataR::raw.dataProject()"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/fig2tex.html","id":null,"dir":"Reference","previous_headings":"","what":"Save figure to TeX snippet — fig2tex","title":"Save figure to TeX snippet — fig2tex","text":"Saves figure creates small TeX snippet caption label, can              compiled LaTeX document.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/fig2tex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save figure to TeX snippet — fig2tex","text":"","code":"fig2tex(g, fileGraph, caption)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/fig2tex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save figure to TeX snippet — fig2tex","text":"g figure class ggplot caption caption figure filename file name save figure","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/fig2tex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save figure to TeX snippet — fig2tex","text":"","code":"q = tempdir() x=seq(-10,10,0.1); y=x^2-2 g = ggplot2::ggplot(data.frame(x,y), ggplot2::aes(x,y)) +   ggplot2::geom_point(col='red') + ggplot2::theme_bw() fig2tex(g, file.path(q,\"test.png\"), \"First Graph.\") #> Saving 6.67 x 6.67 in image #> [1] \"test.tex\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/path.goUpOneDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Return path up one directory — path.goUpOneDir","title":"Return path up one directory — path.goUpOneDir","text":"Return path one directory","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/path.goUpOneDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return path up one directory — path.goUpOneDir","text":"","code":"path.goUpOneDir(p)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/path.goUpOneDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return path up one directory — path.goUpOneDir","text":"p path","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/path.goUpOneDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return path up one directory — path.goUpOneDir","text":"path last directory removed","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/path.goUpOneDir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return path up one directory — path.goUpOneDir","text":"","code":"path.goUpOneDir('/Users/test/fish-100') #> [1] \"/Users/test\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.checkNoSubfolders.html","id":null,"dir":"Reference","previous_headings":"","what":"Subfolders in RAW path — raw.checkNoSubfolders","title":"Subfolders in RAW path — raw.checkNoSubfolders","text":"RAW path contain subfolders; reason subfolders tend additional information folder name, makes file less unique.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.checkNoSubfolders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subfolders in RAW path — raw.checkNoSubfolders","text":"","code":"raw.checkNoSubfolders(pfad)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.checkNoSubfolders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subfolders in RAW path — raw.checkNoSubfolders","text":"pfad path RAW folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.checkNoSubfolders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subfolders in RAW path — raw.checkNoSubfolders","text":"TRUE subfolders","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.checkNoSubfolders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subfolders in RAW path — raw.checkNoSubfolders","text":"","code":"raw.checkNoSubfolders(raw.getSamplePath()) #> [1] TRUE"},{"path":[]},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataMaker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates a maker file inside the data-raw folder — raw.dataMaker","text":"","code":"raw.dataMaker(fileMaker = NULL)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataMaker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates a maker file inside the data-raw folder — raw.dataMaker","text":"fileMaker type file generate, NULL options provided via terminal","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataMaker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"creates a maker file inside the data-raw folder — raw.dataMaker","text":"","code":"{ raw.dataMaker() } #> Error in menu(c(\"dataRAW files\", \"AFM data files\")): menu() cannot be used non-interactively"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataProject.html","id":null,"dir":"Reference","previous_headings":"","what":"makes a data R project — raw.dataProject","title":"makes a data R project — raw.dataProject","text":"Use interactive directory selector create data R project: selected folder subdirectory called RAW RAW data files stored directory","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataProject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"makes a data R project — raw.dataProject","text":"","code":"raw.dataProject(sourceDir = NULL)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataProject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"makes a data R project — raw.dataProject","text":"sourceDir specified, R project generated directory, otherwise interactive window allows user select directory","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.dataProject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"makes a data R project — raw.dataProject","text":"","code":"if (FALSE) { RAWdataR::raw.dataProject() }"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findDuplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Find duplicate RAW files — raw.findDuplicates","title":"Find duplicate RAW files — raw.findDuplicates","text":"Date: 2018-11-21 Searches directory files (necessarily coded properly), returns vector files duplicate.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findDuplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find duplicate RAW files — raw.findDuplicates","text":"","code":"raw.findDuplicates(pfad, fromLast = TRUE, isValid = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findDuplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find duplicate RAW files — raw.findDuplicates","text":"pfad path search duplicate files fromLast TRUE, last element kept, FALSE, first element kept, default TRUE isValid TRUE search valid named files","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findDuplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find duplicate RAW files — raw.findDuplicates","text":"list files duplicates","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"returns a list of files provided the search criteria — raw.findFiles","title":"returns a list of files provided the search criteria — raw.findFiles","text":"returns list files provided search criteria","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns a list of files provided the search criteria — raw.findFiles","text":"","code":"raw.findFiles(   pfad,   project = \"[^_]+\",   date = \"[^_]+\",   user = \"[^_]+\",   instrument = \"[^_]+\",   sample = \"[^_]+\",   md5 = \"\",   fullPath = TRUE,   recursive = FALSE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns a list of files provided the search criteria — raw.findFiles","text":"pfad path RAW files project name project date date format YYYYMMDD user 2 initials user instrument name instrument, 'vsm' sample sample name md5 single string comma separated abbreviated MD5 sums fullPath TRUE, returns full path, otherwise filename recursive TRUE, also searchs subfolders","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns a list of files provided the search criteria — raw.findFiles","text":"list filenames certain checksum","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.findFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns a list of files provided the search criteria — raw.findFiles","text":"","code":"pfad = raw.getSamplePath() file.list = raw.findFiles(pfad, date='201606')  # all files from June 2019 print(basename(file.list)) #> [1] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\" md5String = raw.getMD5str(file.list) file.list = raw.findFiles(pfad, md5 = md5String) print(basename(file.list)) #> [1] \"20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt\"           #> [2] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.fixInvalidFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix invalid data filename — raw.fixInvalidFile","title":"Fix invalid data filename — raw.fixInvalidFile","text":"Fix invalid data filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.fixInvalidFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix invalid data filename — raw.fixInvalidFile","text":"","code":"raw.fixInvalidFile(   filename,   addInstrument = \"\",   addUser = \"\",   addProject = \"\",   addSample = \"\",   renameFile = FALSE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.fixInvalidFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix invalid data filename — raw.fixInvalidFile","text":"filename name file addInstrument instrument added addUser user added addProject project added addSample sample added renameFile TRUE file renamed","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.fixInvalidFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix invalid data filename — raw.fixInvalidFile","text":"returns fixed filenames","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.fixInvalidFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix invalid data filename — raw.fixInvalidFile","text":"","code":"f = raw.findFiles(raw.getSamplePath(), instrument='MM160622SI1') print(f) #> [1] \"/private/var/folders/n7/c8bjcf7n25g74wqr3_7cgpvh0000gt/T/RtmpF3f8tA/temp_libpath522c15ef91ec/RAWdataR/extdata/20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\" f.new = raw.fixInvalidFile(f, addInstrument='vsm') print(paste(\"Old name:\",f)) #> [1] \"Old name: /private/var/folders/n7/c8bjcf7n25g74wqr3_7cgpvh0000gt/T/RtmpF3f8tA/temp_libpath522c15ef91ec/RAWdataR/extdata/20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\" print(paste(\"New name:\",f.new)) #> [1] \"New name: /private/var/folders/n7/c8bjcf7n25g74wqr3_7cgpvh0000gt/T/RtmpF3f8tA/temp_libpath522c15ef91ec/RAWdataR/extdata/20160718_Dual_MM_vsm_MM160622SI1_20160718_2.5K_MVSH_00001.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.generateDataMaker.html","id":null,"dir":"Reference","previous_headings":"","what":"creates a maker file inside the data-raw folder — raw.generateDataMaker","title":"creates a maker file inside the data-raw folder — raw.generateDataMaker","text":"creates maker file inside data-raw folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.generateDataMaker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates a maker file inside the data-raw folder — raw.generateDataMaker","text":"","code":"raw.generateDataMaker(fileMaker = \"make.dataRAW.R\")"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFileByID.html","id":null,"dir":"Reference","previous_headings":"","what":"Return filename by ID — raw.getFileByID","title":"Return filename by ID — raw.getFileByID","text":"Return filename ID","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFileByID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return filename by ID — raw.getFileByID","text":"","code":"raw.getFileByID(ID, pRESULTS = \"data-raw\", idFile = \"RAW-ID.csv\")"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFileByID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return filename by ID — raw.getFileByID","text":"ID list RAW file IDs pRESULTS results folder idFile name file RAW IDs","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFileByID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return filename by ID — raw.getFileByID","text":"data frame filename, path, information file","code":""},{"path":[]},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilename.html","id":null,"dir":"Reference","previous_headings":"","what":"OBSOLETE: return filename from MD5 — raw.getFilename","title":"OBSOLETE: return filename from MD5 — raw.getFilename","text":"OBSOLETE: return filename MD5","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OBSOLETE: return filename from MD5 — raw.getFilename","text":"","code":"raw.getFilename(file.list, MD5)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OBSOLETE: return filename from MD5 — raw.getFilename","text":"file.list path filenames MD5 checksum, can length","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilenameByMD5.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the filename with certain MD5sum — raw.getFilenameByMD5","title":"returns the filename with certain MD5sum — raw.getFilenameByMD5","text":"returns filename certain MD5sum","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilenameByMD5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the filename with certain MD5sum — raw.getFilenameByMD5","text":"","code":"raw.getFilenameByMD5(file.list, MD5)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilenameByMD5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the filename with certain MD5sum — raw.getFilenameByMD5","text":"file.list path filenames MD5 checksum, can length","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilenameByMD5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the filename with certain MD5sum — raw.getFilenameByMD5","text":"filename certain MD5 checksum, returns NA found","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getFilenameByMD5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the filename with certain MD5sum — raw.getFilenameByMD5","text":"","code":"file.list = file.path(raw.getSampleFiles()) raw.getFilenameByMD5(file.list,'24fefa') #> [1] \"/private/var/folders/n7/c8bjcf7n25g74wqr3_7cgpvh0000gt/T/RtmpF3f8tA/temp_libpath522c15ef91ec/RAWdataR/extdata/20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getIDbyFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Return filename by ID — raw.getIDbyFile","title":"Return filename by ID — raw.getIDbyFile","text":"Return filename ID","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getIDbyFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return filename by ID — raw.getIDbyFile","text":"","code":"raw.getIDbyFile(   file.list,   pRESULTS = \"data-raw\",   idFile = \"RAW-ID.csv\",   exactNameMatch = TRUE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getIDbyFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return filename by ID — raw.getIDbyFile","text":"file.list list file names pRESULTS results folder, missing path.RESULTS defined use folder idFile name file RAW IDs exactNameMatch logical, FALSE match partial file names","code":""},{"path":[]},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getInvalidFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns all invalid RAW files — raw.getInvalidFiles","title":"Returns all invalid RAW files — raw.getInvalidFiles","text":"Searches folder (year) files invalid","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getInvalidFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns all invalid RAW files — raw.getInvalidFiles","text":"","code":"raw.getInvalidFiles(pfad, year = \".*\", recursive = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getInvalidFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns all invalid RAW files — raw.getInvalidFiles","text":"pfad path RAW folder year limit particular year (currently ignored) recursive TRUE, also search sub-directories","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getInvalidFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns all invalid RAW files — raw.getInvalidFiles","text":"vector filenames","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getInvalidFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns all invalid RAW files — raw.getInvalidFiles","text":"","code":"raw.getInvalidFiles(raw.getSamplePath()) #> [1] \"not-a-RAW-file.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the MD5sum of a filename — raw.getMD5","title":"returns the MD5sum of a filename — raw.getMD5","text":"returns MD5sum filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the MD5sum of a filename — raw.getMD5","text":"","code":"raw.getMD5(filename, num = 6)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the MD5sum of a filename — raw.getMD5","text":"filename filename num string length","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the MD5sum of a filename — raw.getMD5","text":"CRC MD5 sum particular file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the MD5sum of a filename — raw.getMD5","text":"","code":"raw.getMD5(raw.getSampleFiles(),num=10) #>           /private/var/folders/n7/c8bjcf7n25g74wqr3_7cgpvh0000gt/T/RtmpF3f8tA/temp_libpath522c15ef91ec/RAWdataR/extdata/20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt  #>                                                                                                                                                                           \"7545cdf506\"  #> /private/var/folders/n7/c8bjcf7n25g74wqr3_7cgpvh0000gt/T/RtmpF3f8tA/temp_libpath522c15ef91ec/RAWdataR/extdata/20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt  #>                                                                                                                                                                           \"7545cdf506\"  #>                /private/var/folders/n7/c8bjcf7n25g74wqr3_7cgpvh0000gt/T/RtmpF3f8tA/temp_libpath522c15ef91ec/RAWdataR/extdata/20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt  #>                                                                                                                                                                           \"24fefae835\"  #>                                                       /private/var/folders/n7/c8bjcf7n25g74wqr3_7cgpvh0000gt/T/RtmpF3f8tA/temp_libpath522c15ef91ec/RAWdataR/extdata/not-a-RAW-file.txt  #>                                                                                                                                                                           \"7545cdf506\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5str.html","id":null,"dir":"Reference","previous_headings":"","what":"returns a string with all MD5 files — raw.getMD5str","title":"returns a string with all MD5 files — raw.getMD5str","text":"returns string MD5 files","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns a string with all MD5 files — raw.getMD5str","text":"","code":"raw.getMD5str(filename)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns a string with all MD5 files — raw.getMD5str","text":"filename filename path","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns a string with all MD5 files — raw.getMD5str","text":"CRC MD5 sum particular file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getMD5str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns a string with all MD5 files — raw.getMD5str","text":"","code":"raw.getMD5str(raw.getSampleFiles()) #> [1] \"7545cd,7545cd,24fefa,7545cd\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate projects, dates, and users — raw.getNames","title":"Separate projects, dates, and users — raw.getNames","text":"Separate projects, dates, users","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate projects, dates, and users — raw.getNames","text":"","code":"raw.getNames(file.list)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate projects, dates, and users — raw.getNames","text":"file.list file names","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate projects, dates, and users — raw.getNames","text":"list","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Separate projects, dates, and users — raw.getNames","text":"","code":"raw.getNames(raw.getSampleFiles()) #> Warning: There are 1 invalid files that were removed from analysis. #>       date project user        instrument                             sample #> 1 20141215    FePc   TG               vsm                           Tb33Al66 #> 2 20160607 Optical   AN Spectrophotometer NM20151109CuPc100gl150-A2(UDS).txt #> 3 20160718    Dual   MM       MM160622SI1                           20160718 #>                                                                    comment #> 1           20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt #> 2 20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt #> 3                                                               MVSH_00001 #>                                                                  extension size #> 1           20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt   NA #> 2 20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt   NA #> 3                                                                      txt   NA"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoImages.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the number of images — raw.getNoImages","title":"returns the number of images — raw.getNoImages","text":"returns number images","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoImages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the number of images — raw.getNoImages","text":"","code":"raw.getNoImages(pfad)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoImages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the number of images — raw.getNoImages","text":"pfad path RAW folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoImages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the number of images — raw.getNoImages","text":"number images","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoImages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns the number of images — raw.getNoImages","text":"","code":"raw.getNoImages(raw.getSamplePath()) #> [1] 0"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"returns approximate number of samples that were made — raw.getNoSamples","title":"returns approximate number of samples that were made — raw.getNoSamples","text":"returns approximate number samples made","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns approximate number of samples that were made — raw.getNoSamples","text":"","code":"raw.getNoSamples(pfad, recursive = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns approximate number of samples that were made — raw.getNoSamples","text":"pfad path RAW folder recursive TRUE search also subfolders","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns approximate number of samples that were made — raw.getNoSamples","text":"number samples made NTE","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getNoSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"returns approximate number of samples that were made — raw.getNoSamples","text":"","code":"raw.getNoSamples(raw.getSamplePath()) #> [1] 3"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the MD5sum of a filename — raw.getPartialMD5","title":"returns the MD5sum of a filename — raw.getPartialMD5","text":"returns MD5sum filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the MD5sum of a filename — raw.getPartialMD5","text":"","code":"raw.getPartialMD5(filename, num = 6)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns the MD5sum of a filename — raw.getPartialMD5","text":"filename filename num string length","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns the MD5sum of a filename — raw.getPartialMD5","text":"CRC MD5 sum particular file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5str.html","id":null,"dir":"Reference","previous_headings":"","what":"returns a string with all MD5 files — raw.getPartialMD5str","title":"returns a string with all MD5 files — raw.getPartialMD5str","text":"returns string MD5 files","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns a string with all MD5 files — raw.getPartialMD5str","text":"","code":"raw.getPartialMD5str(filename)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns a string with all MD5 files — raw.getPartialMD5str","text":"filename filename path","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getPartialMD5str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns a string with all MD5 files — raw.getPartialMD5str","text":"CRC MD5 sum particular file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSampleFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Files from RAW folder — raw.getSampleFiles","title":"Sample Files from RAW folder — raw.getSampleFiles","text":"Returns list filenames sample RAW folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSampleFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Files from RAW folder — raw.getSampleFiles","text":"","code":"raw.getSampleFiles()"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSampleFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Files from RAW folder — raw.getSampleFiles","text":"list filenames including path","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSampleFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Files from RAW folder — raw.getSampleFiles","text":"","code":"basename(raw.getSampleFiles()) #> [1] \"20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt\"           #> [2] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\" #> [3] \"20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\"                #> [4] \"not-a-RAW-file.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSamplePath.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample path to RAW folder — raw.getSamplePath","title":"Sample path to RAW folder — raw.getSamplePath","text":"Returns path several sample files check validity filenames.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSamplePath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample path to RAW folder — raw.getSamplePath","text":"","code":"raw.getSamplePath()"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSamplePath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample path to RAW folder — raw.getSamplePath","text":"path sample RAW files","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getSamplePath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample path to RAW folder — raw.getSamplePath","text":"","code":"if (FALSE) {   raw.getSamplePath() }"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getValidFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns all valid RAW files — raw.getValidFiles","title":"Returns all valid RAW files — raw.getValidFiles","text":"Searches folder valid files","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getValidFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns all valid RAW files — raw.getValidFiles","text":"","code":"raw.getValidFiles(pfad, recursive = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getValidFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns all valid RAW files — raw.getValidFiles","text":"pfad path RAW folder recursive TRUE, also search sub-directories","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getValidFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns all valid RAW files — raw.getValidFiles","text":"vector filenames","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.getValidFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns all valid RAW files — raw.getValidFiles","text":"","code":"raw.getValidFiles(raw.getSamplePath()) #> [1] \"20141215_FePc_TG_vsm_Tb33Al66_20141215-Tb33Al66-ac1Oe-20Hz.txt\"           #> [2] \"20160607_Optical_AN_Spectrophotometer_NM20151109CuPc100gl150-A2(UDS).txt\" #> [3] \"20160718_Dual_MM_MM160622SI1_20160718_2.5K_MVSH_00001.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.inspectFolder.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect RAW data folder — raw.inspectFolder","title":"Inspect RAW data folder — raw.inspectFolder","text":"Inspect RAW data folder","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.inspectFolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect RAW data folder — raw.inspectFolder","text":"","code":"raw.inspectFolder(pfad, recursive = FALSE)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.inspectFolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect RAW data folder — raw.inspectFolder","text":"pfad path folder RAW data recursive TRUE also search subfolders","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.inspectFolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect RAW data folder — raw.inspectFolder","text":"list","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.inspectFolder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect RAW data folder — raw.inspectFolder","text":"","code":"raw.inspectFolder(raw.getSamplePath()) #> $hasSubfolders #> [1] FALSE #>  #> $projects #> [1] \"Dual,FePc,Optical\" #>  #> $users #> [1] \"AN,MM,TG\" #>  #> $samples #> [1] \"20160718,NM20151109CuPc100gl150-A2(UDS).txt,Tb33Al66\" #>  #> $instruments #> [1] \"mm160622si1,spectrophotometer,vsm\" #>  #> $validFiles #> [1] 3 #>  #> $invalidFiles #> [1] 1 #>"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.isValid.html","id":null,"dir":"Reference","previous_headings":"","what":"check whether a RAW data file has a valid filename — raw.isValid","title":"check whether a RAW data file has a valid filename — raw.isValid","text":"check whether RAW data file valid filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.isValid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check whether a RAW data file has a valid filename — raw.isValid","text":"","code":"raw.isValid(filename)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.isValid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check whether a RAW data file has a valid filename — raw.isValid","text":"filename name file","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.isValid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check whether a RAW data file has a valid filename — raw.isValid","text":"returns TRUE name valid format","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.isValid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check whether a RAW data file has a valid filename — raw.isValid","text":"","code":"raw.isValid(raw.getSampleFiles()) #> [1]  TRUE  TRUE  TRUE FALSE"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.splitFilename.html","id":null,"dir":"Reference","previous_headings":"","what":"splits filename into fields — raw.splitFilename","title":"splits filename into fields — raw.splitFilename","text":"splits filename fields","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.splitFilename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"splits filename into fields — raw.splitFilename","text":"","code":"raw.splitFilename(filelist)"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.splitFilename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"splits filename into fields — raw.splitFilename","text":"filelist filename RAW folder format","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.splitFilename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"splits filename into fields — raw.splitFilename","text":"data frame","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.splitFilename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"splits filename into fields — raw.splitFilename","text":"","code":"raw.splitFilename('20010101_project_user_inst_sample_desc.DAT') #>       Date Project User Instrument Sample Description Extension #> 1 20010101 project user       inst sample    desc.DAT       DAT"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.tryFixInvalidFile.html","id":null,"dir":"Reference","previous_headings":"","what":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","title":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","text":"suggests new filename invalid filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.tryFixInvalidFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","text":"","code":"raw.tryFixInvalidFile(   pfad,   filename,   project = \"xx\",   user = \"unknown\",   guessSample = FALSE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.tryFixInvalidFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","text":"pfad path RAW folder filename filename RAW folder project project name known user 2 3 letter user initials guessSample TRUE/FALSE add sample name","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.tryFixInvalidFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","text":"string suggested filename","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.tryFixInvalidFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"suggests a new filename for an invalid filename — raw.tryFixInvalidFile","text":"","code":"fname = raw.getInvalidFiles(raw.getSamplePath())[1] raw.tryFixInvalidFile(pfad = raw.getSamplePath(),filename = fname) #> [1] \"20221202_xx_unknown_NTE_not-a-RAW-file.txt\""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigns ID to each RAW data file — raw.updateID","title":"Assigns ID to each RAW data file — raw.updateID","text":"Code finds RAW files assigns ID, ID assigned, stay file; file identified CRC checksum code filesize, necessarily filename; filename changed, ID remain , file changing","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assigns ID to each RAW data file — raw.updateID","text":"","code":"raw.updateID(   pRAW,   pRESULTS,   idFile = \"RAW-ID.csv\",   forceRegenerate = FALSE,   fixDuplicates = FALSE,   verbose = FALSE )"},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assigns ID to each RAW data file — raw.updateID","text":"pRAW path raw data, default: uses `data-raw` folder, creates pRESULTS path results, default: uses pRAW idFile name file IDs, default: RAW-ID.csv forceRegenerate logical, regenerate file, use great care fixDuplicates logical, TRUE, duplicates removed, use care verbose logical, TRUE outputs information process","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assigns ID to each RAW data file — raw.updateID","text":"returns TRUE name valid format","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":"possible-scenarios","dir":"Reference","previous_headings":"","what":"Possible scenarios","title":"Assigns ID to each RAW data file — raw.updateID","text":"(rule 1) RAW ID file exist must generated (rule 2) new RAW file added, (rule 3) RAW file missing, (rule 4) RAW file duplicate different folder, (rule 5) RAW file duplicate new name, (rule 6) RAW file moved different folder, folder needs update","code":""},{"path":[]},{"path":"https://thomasgredig.github.io/RAWdataR/reference/raw.updateID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assigns ID to each RAW data file — raw.updateID","text":"","code":"if (FALSE) {   raw.updateID() }"},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-061","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.6.1","title":"RAWdataR 0.6.1","text":"function fig2tex() save graphs TeX snippet import","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-06","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.6","title":"RAWdataR 0.6","text":"adding raw.dataProject() generate data R project start framework quickly use raw.dataMaker() generate dataset maker files RAWID etc.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-052","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.5.2","title":"RAWdataR 0.5.2","text":"raw.updateID() uses data-raw default raw folder also results","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-052-1","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.5.2","title":"RAWdataR 0.5.2","text":"allow search partial filename matching raw.getIDfromFile() add raw.updateID() build unique IDs files based MD5 add function path.goUpOneDir() easily go one directory","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-051","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.5.1","title":"RAWdataR 0.5.1","text":"allow recursive search (subfolders) raw data folder Number valid files returned raw.inspectFolder() Instruments “xrd” “XRD” converted lowercase raw.fixInvalidFile() can add instrument, user, project, sample Fix findFiles, specific item searched.","code":""},{"path":"https://thomasgredig.github.io/RAWdataR/news/index.html","id":"rawdatar-05","dir":"Changelog","previous_headings":"","what":"RAWdataR 0.5","title":"RAWdataR 0.5","text":"Add raw.fixInvalidFile() fix filenames Write path inspector Fix raw.findFiles() MD5 code Validation files raw.isValid() (Documentation References)[https://thomasgredig.github.io/RAWdataR/] tools library used MD5 checks use_news_md() Added NEWS.md file track changes package.","code":""}]
